{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovie/constants.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","inputsConfig","inputsErrors","initialInputs","NewMovie","state","errors","addInfo","event","target","name","value","setState","onAdd","preventDefault","addMovie","props","prevState","validateNewMovie","hasErrors","clearInputs","requiredValidator","newMovie","errorsEntries","Object","entries","some","reduce","acc","error","blurValidation","this","action","classNames","error_in_field","type","onChange","onBlur","onClick","Component","App","moviesFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7df03f54.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","export const inputsConfig = [\n  'title',\n  'description',\n  'imgUrl',\n  'imdbUrl',\n  'imdbId',\n];\n\nexport const inputsErrors = {\n  title: '',\n  description: '',\n  imgUrl: '',\n  imdbUrl: '',\n  imdbId: '',\n};\n\nexport const initialInputs = {\n  title: '',\n  description: '',\n  imgUrl: '',\n  imdbUrl: '',\n  imdbId: '',\n};\n","import React, { Component } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport './NewMovie.scss';\nimport { inputsConfig, inputsErrors, initialInputs } from './constants';\n\nexport class NewMovie extends Component {\n  state = {\n    ...initialInputs,\n    errors: inputsErrors,\n  };\n\n  addInfo = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  onAdd = (event) => {\n    event.preventDefault();\n    const { addMovie } = this.props;\n\n    this.setState((prevState) => {\n      const { errors, hasErrors } = this.validateNewMovie(this.state);\n\n      if (hasErrors) {\n        return {\n          errors,\n        };\n      }\n\n      addMovie(prevState);\n\n      return this.clearInputs();\n    });\n  }\n\n  clearInputs = () => {\n    this.setState({\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n      errors: inputsErrors,\n    });\n  }\n\n  requiredValidator = (name, value) => {\n    return value\n      ? null\n      : `Field ${name} is required`;\n  }\n\n  validateNewMovie = (newMovie) => {\n    const errorsEntries = Object.entries(newMovie).map(([name, value]) => {\n      const error = this.requiredValidator(name, value);\n\n      return [name, error];\n    });\n\n    const hasErrors = errorsEntries.some(([, error]) => !!error);\n    const errors = errorsEntries.reduce((acc, [name, error]) => {\n      return {\n        ...acc,\n        [name]: error,\n      };\n    }, {});\n\n    return {\n      errors,\n      hasErrors,\n    };\n  }\n\n  blurValidation = (event) => {\n    const { name } = event.target;\n\n    if (this.state[name]) {\n      this.setState((prevState) => {\n        return ({\n          errors: {\n            ...prevState.errors,\n            [name]: '',\n          },\n        });\n      });\n    }\n  }\n\n  render() {\n    const { errors } = this.state;\n\n    return (\n      <form action=\"submit\">\n        {inputsConfig.map(name => (\n          <div key={name}>\n            <label className=\"add-movie-label\">\n              Add\n              {name}\n              <input\n                className={classNames('ui input add-movie-input', {\n                  error_in_field: errors[name],\n                })}\n                type=\"text\"\n                value={this.state[name]}\n                onChange={this.addInfo}\n                name={name}\n                onBlur={this.blurValidation}\n              />\n            </label>\n            {errors[name] && (\n              <p className=\"error-text\">{errors[name]}</p>\n            )}\n          </div>\n        ))}\n\n        <div>\n          <button\n            className=\"ui button add-movie-button\"\n            type=\"submit\"\n            onClick={this.onAdd}\n          >\n            Add movie\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState((state) => {\n      return {\n        movies: [...state.movies, movie],\n      };\n    });\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}